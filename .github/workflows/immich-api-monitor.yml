name: Immich API Monitor

on:
    schedule:
        # Run daily at 5:00 AM UTC
        - cron: "0 5 * * *"
    workflow_dispatch:
        # Allow manual triggering

permissions:
    contents: write
    issues: write

jobs:
    monitor-api-changes:
        name: Monitor Immich API Changes
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v5
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  fetch-depth: 0

            - name: Setup Git
              run: |
                  git config --local user.email "action@github.com"
                  git config --local user.name "GitHub Action"

            - name: Create monitoring directory
              run: |
                  mkdir -p .github/immich-api-monitor

            - name: Download current Immich OpenAPI specs
              run: |
                  echo "Downloading Immich OpenAPI specs..."
                  curl -s -H "Accept: application/vnd.github.raw" \
                    "https://api.github.com/repos/immich-app/immich/contents/open-api/immich-openapi-specs.json?ref=main" \
                    -o .github/immich-api-monitor/immich-openapi-specs-new.json

                  if [ ! -f .github/immich-api-monitor/immich-openapi-specs-new.json ]; then
                    echo "Failed to download OpenAPI specs"
                    exit 1
                  fi

            - name: Check for existing baseline
              id: check_baseline
              run: |
                  if [ -f .github/immich-api-monitor/immich-openapi-specs-baseline.json ]; then
                    echo "baseline_exists=true" >> $GITHUB_OUTPUT
                  else
                    echo "baseline_exists=false" >> $GITHUB_OUTPUT
                  fi

            - name: Create initial baseline if it doesn't exist
              if: steps.check_baseline.outputs.baseline_exists == 'false'
              run: |
                  echo "Creating initial baseline..."
                  cp .github/immich-api-monitor/immich-openapi-specs-new.json .github/immich-api-monitor/immich-openapi-specs-baseline.json

                  # Get the current commit hash from Immich repo for reference
                  IMMICH_COMMIT=$(curl -s https://api.github.com/repos/immich-app/immich/commits/main | jq -r '.sha')
                  echo "$IMMICH_COMMIT" > .github/immich-api-monitor/last-checked-commit.txt

                  git add .github/immich-api-monitor/
                  git commit -m "Initialize Immich API monitoring baseline"
                  git push

            - name: Compare with baseline
              id: compare
              if: steps.check_baseline.outputs.baseline_exists == 'true'
              run: |
                  echo "Comparing with baseline..."

                  # Check if files are different
                  if ! cmp -s .github/immich-api-monitor/immich-openapi-specs-baseline.json .github/immich-api-monitor/immich-openapi-specs-new.json; then
                    echo "changes_detected=true" >> $GITHUB_OUTPUT
                    echo "Changes detected in Immich OpenAPI specs!"
                    
                    # Generate a diff summary
                    echo "## Changes Summary" > diff_summary.md
                    echo "" >> diff_summary.md
                    echo "Changes were detected in the Immich OpenAPI specifications." >> diff_summary.md
                    echo "" >> diff_summary.md
                    
                    # Try to extract version information if available
                    OLD_VERSION=$(jq -r '.info.version // "unknown"' .github/immich-api-monitor/immich-openapi-specs-baseline.json 2>/dev/null || echo "unknown")
                    NEW_VERSION=$(jq -r '.info.version // "unknown"' .github/immich-api-monitor/immich-openapi-specs-new.json 2>/dev/null || echo "unknown")
                    
                    echo "- Previous version: \`$OLD_VERSION\`" >> diff_summary.md
                    echo "- New version: \`$NEW_VERSION\`" >> diff_summary.md
                    echo "" >> diff_summary.md
                    
                    # Get current Immich commit
                    CURRENT_COMMIT=$(curl -s https://api.github.com/repos/immich-app/immich/commits/main | jq -r '.sha')
                    LAST_COMMIT=$(cat .github/immich-api-monitor/last-checked-commit.txt 2>/dev/null || echo "unknown")
                    
                    echo "- Immich commit: [\`${CURRENT_COMMIT:0:7}\`](https://github.com/immich-app/immich/commit/$CURRENT_COMMIT)" >> diff_summary.md
                    echo "- Last checked commit: \`${LAST_COMMIT:0:7}\`" >> diff_summary.md
                    echo "" >> diff_summary.md
                    echo "**Action Required:** Review the changes and update your immich-go client accordingly." >> diff_summary.md
                    echo "" >> diff_summary.md
                    echo "You can view the full OpenAPI specification at: [immich-openapi-specs.json](https://github.com/immich-app/immich/blob/main/open-api/immich-openapi-specs.json)" >> diff_summary.md
                    
                  else
                    echo "changes_detected=false" >> $GITHUB_OUTPUT
                    echo "No changes detected."
                  fi

            - name: Create issue for API changes
              if: steps.compare.outputs.changes_detected == 'true'
              uses: actions/github-script@v7
              with:
                  script: |
                      const fs = require('fs');

                      // Read the diff summary
                      const diffSummary = fs.readFileSync('diff_summary.md', 'utf8');

                      // Check if there's already an open issue about API changes
                      const { data: issues } = await github.rest.issues.listForRepo({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        labels: ['immich-api-update'],
                        state: 'open'
                      });

                      const title = 'ðŸš¨ Immich API Changes Detected';

                      if (issues.length === 0) {
                        // Create new issue
                        await github.rest.issues.create({
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          title: title,
                          body: diffSummary,
                          labels: ['immich-api-update', 'needs-review']
                        });
                        
                        console.log('Created new issue for API changes');
                      } else {
                        // Update existing issue
                        await github.rest.issues.createComment({
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          issue_number: issues[0].number,
                          body: `## New Changes Detected\n\n${diffSummary}\n\n---\n*Updated: ${new Date().toISOString()}*`
                        });
                        
                        console.log('Updated existing issue with new changes');
                      }

            - name: Update baseline
              if: steps.compare.outputs.changes_detected == 'true'
              run: |
                  echo "Updating baseline with new specs..."
                  cp .github/immich-api-monitor/immich-openapi-specs-new.json .github/immich-api-monitor/immich-openapi-specs-baseline.json

                  # Update the commit reference
                  CURRENT_COMMIT=$(curl -s https://api.github.com/repos/immich-app/immich/commits/main | jq -r '.sha')
                  echo "$CURRENT_COMMIT" > .github/immich-api-monitor/last-checked-commit.txt

                  git add .github/immich-api-monitor/
                  git commit -m "Update Immich API baseline after detecting changes"
                  git push

            - name: Clean up temporary files
              if: always()
              run: |
                  rm -f .github/immich-api-monitor/immich-openapi-specs-new.json
                  rm -f diff_summary.md

            - name: Summary
              run: |
                  if [ "${{ steps.compare.outputs.changes_detected }}" = "true" ]; then
                    echo "âœ… API changes detected and issue created/updated"
                  elif [ "${{ steps.check_baseline.outputs.baseline_exists }}" = "false" ]; then
                    echo "âœ… Initial baseline created"
                  else
                    echo "âœ… No API changes detected"
                  fi
